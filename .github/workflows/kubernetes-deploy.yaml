name: CI/CD Pipeline for Kubernetes Deployment

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up Docker
      #- name: Set up Docker
        #uses: docker/setup-buildx-action@v2

    # Step 3: Build Docker images
      #- name: Build Docker Image
        #run: |
        #docker build -t chinmaycp/student-help-desk:latest .

    # Step 4: Push images to Docker Hub
      #- name: Login to Docker hub
        #uses: docker/login-action@v2
        #with: 
        #username: ${{ secrets.DOCKER_USERNAME }}
        #password: ${{ secrets.DOCKER_PASSWORD }}

      #- name: Push Image
        #run: |
        #docker push chinmaycp/student-help-desk:latest
    
     
    # Step 5: Set up Kubernetes context to interact with Minikube
    - name: Set up Kubernetes context
      run: |
        echo "${{ secrets.KUBECONFIG }}" | base64 --decode > ~/tmp/kubeconfig
        export KUBECONFIG=/tmp/kubeconfig
        kubectl config use-context minikube
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}

    # Step 6: Apply Kubernetes manifests (deployment and service)
    - name: Deploy to Kubernetes
      run: |
        echo "Applying Kubernetes manifests"
        kubectl apply -f backend.yaml
        kubectl apply -f frontend.yaml
        kubectl apply -f mysql-data.yaml

    # Step 7: Verify the deployment
    - name: Verify Kubernetes deployment
      run: |
        echo "Verifying pods"
        kubectl get pods
          
    # Step 8: Wait for the deployment to be ready (optional, depends on your deployment)
    - name: Wait for deployment to be ready
      run: |
        kubectl rollout status deployment/my-deployment
          
    # Step 9: Test the service (optional, replace with actual test steps)
    - name: Test service availability
      run: |
        kubectl get svc
          # You can add curl or other testing commands here to verify the service    
