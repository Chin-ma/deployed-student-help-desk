name: CI/CD Pipeline for Kubernetes Deployment

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up Docker
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    # Step 3: Build Docker images
    - name: Build Docker Image
      run: |
        docker build -t chinmaycp/student-help-desk:latest .

    # Step 4: Push images to Docker Hub
    - name: Login to Docker hub
      uses: docker/login-action@v2
      with: 
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Image
      run: |
        docker push chinmaycp/student-help-desk:latest
    
    # Step 5: Install Minikube
    - name: Install Minikube
      run: |
        curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo mv minikube /usr/local/bin/
        sudo chmod +x /usr/local/bin/minikube
   
    # Step 6: Start Minikube (this will set up a Kubernetes cluster on the runner)
    - name: Start Minikube
      run: |
        minikube start --driver=docker

    # Step 7: Set KUBECONFIG to the correct location
    - name: Set KUBECONFIG environment variable
      run: echo "KUBECONFIG=/home/runner/.kube/config" >> $GITHUB_ENV

    # Step 8: Set up Kubernetes certificates (using GitHub secrets for security)
    - name: Set up Kubernetes Certificates
      run: |
        mkdir -p ~/.minikube/profiles/minikube
        echo "$MINIKUBE_CLIENT_CERT" > ~/.minikube/profiles/minikube/client.crt
        echo "$MINIKUBE_CLIENT_KEY" > ~/.minikube/profiles/minikube/client.key
        echo "$MINIKUBE_CA_CERT" > ~/.minikube/ca.crt

        # Optional: Print the first few lines of the certificate files for verification
        cat ~/.minikube/profiles/minikube/client.crt

    # Step 9: Verify Kubernetes cluster connection by checking the nodes
    - name: Verify Kubernetes cluster
      run: |
        kubectl get nodes

    # Step 10: Deploy the application to Kubernetes
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f backend.yaml
        kubectl apply -f frontend.yaml
        kubectl apply -f mysql-data.yaml

    # Step 11: Verify deployment status (Optional, to ensure everything is running)
    - name: Verify Kubernetes Deployments
      run: |
        kubectl get pods
        kubectl get svc
